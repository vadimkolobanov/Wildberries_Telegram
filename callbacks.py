from aiogram import types
from aiogram.fsm.context import FSMContext

from database import session, User, PromoCode
from keyboards import *
from main import dp, Form, bot


@dp.callback_query(lambda c: c.data == 'start_parsing')
async def process_start_parsing(callback_query: types.CallbackQuery, state: FSMContext):
    await bot.send_message(callback_query.from_user.id,
                           f'–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤ ',
                          )
    await state.set_state(Form.waiting_for_url)


@dp.callback_query(lambda c: c.data == 'products')
async def buy_products_menu(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id,
                           '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.'
                           ' –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤.'
                           ' –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –æ—Ç —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º.'
                           ' –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
                           reply_markup=keyboard_products())


@dp.callback_query(lambda c: c.data == 'profile')
async def profile_menu(callback_query: types.CallbackQuery):
    """
      –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

      Args:
          callback_query (types.CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.

      Returns:
          None

      –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Ñ–∏–ª—å", –∏ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏.

      """
    session.rollback()
    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()

    if user:
        registration_date = user.registration_date
        is_vip = user.is_vip
        vip_end_date = user.vip_end_date
        free_requests = user.free_requests
        if not is_vip:
            vip = '‚ùå'
        else:
            vip = '‚úÖ'
        if not vip_end_date:
            vip_end_date = '‚ùå'

        await bot.send_message(callback_query.from_user.id,
                               f'{callback_query.from_user.first_name} {callback_query.from_user.last_name} @{callback_query.from_user.username}\n\n'
                               f'–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ üìÖ: {registration_date}\n\n'
                               f'–î–æ—Å—Ç—É–ø–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ üÜì: {free_requests}\n\n'
                               f'üåü PRO-–∞–∫–∫–∞—É–Ω—Ç: {vip} –¥–æ {vip_end_date}' ,
                               reply_markup=keyboard_main())
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    session.close()

@dp.callback_query(lambda c: c.data == 'promo')
async def promo_menu(callback_query: types.CallbackQuery):
    """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏.

        Args:
            callback_query (types.CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.

        Returns:
            None

        –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–º–æ–∫–æ–¥—ã", –∏ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏.

        """
    await bot.send_message(callback_query.from_user.id,
                           '–ø—Ä–∏–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ',
                           reply_markup=keyboard_promo())


@dp.callback_query(lambda c: c.data == 'create_ref')
async def generate_promo(callback_query: types.CallbackQuery):
    """
       –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

       Args:
           callback_query (types.CallbackQuery): CallbackQuery –æ–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ.

       Returns:
           None

       –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
           –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥" –≤ –º–µ–Ω—é, –∏ —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

       """
    import random
    import string

    def generate_promocode(length=6):
        characters = string.ascii_uppercase + string.digits
        return ''.join(random.choice(characters) for _ in range(length))

    promocode = generate_promocode()
    user = session.query(User).filter_by(telegram_id=callback_query.from_user.id).first()

    if user:

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ
        if not any(promo in user.used_promocodes for promo in user.promocodes):
            # –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏ —Å–≤—è–∂–∏—Ç–µ –µ–≥–æ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            promo_code = PromoCode(code=promocode, creator=user)
            session.add(promo_code)
            session.commit()
            await bot.send_message(callback_query.from_user.id,
                                   f'–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ {promocode} ',
                                   reply_markup=keyboard_main())
            return promocode
        else:
            await callback_query.answer("–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ —Å–æ–∑–¥–∞–Ω")
    else:
        print('–ù–µ—Ç —é–∑–µ—Ä–∞')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
# def use_promocode(user_telegram_id, promocode):
#     # –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ telegram_id
#     user = session.query(User).filter_by(telegram_id=user_telegram_id).first()
#
#     if user:
#         # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ
#         if not any(promo in user.used_promocodes for promo in user.promocodes):
#             # –û–±–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ñ–ª–∞–≥ "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"
#             # –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–¥–µ—Å—å
#
#             # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#             user.used_promocodes.append(promocode)
#             session.commit()
#             return True
#         else:
#             return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥
#     else:
#         return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

